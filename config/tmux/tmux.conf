# : << 'EOF'

setenv -g PATH "$HOME/.bin:$PATH"

set -g status-interval 3

set -g window-status-format " #I:#{b:pane_current_path} "
set -g window-status-separator ""
set -g status-left-length 16
set -g mode-style "fg=default,bg=default,reverse"
set -g pane-active-border "fg=blue"
run -b "cut -c3- ~/.config/tmux/tmux.conf | sh -s monitor_theme"

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set -g renumber-windows on
set -s escape-time 0
set -g history-limit 100000
set -g mode-keys vi

set -g set-titles on
set -g set-titles-string '#S'
set -g display-time 1000

set -g base-index 1
setw -g pane-base-index 1

bind C-b send-prefix
unbind C-z
bind -r C-z resize-pane -Z

bind '"' split-window -v -c "#{pane_current_path}" -l 15 
bind '%' split-window -h -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-\\ last-pane -Z

bind -n M-p switch-client -p
bind -n M-n switch-client -n
bind -n M-h select-window -t :-
bind -n M-l select-window -t :+

bind -n M-K resize-pane -U
bind -n M-J resize-pane -D
bind -n M-H resize-pane -L
bind -n M-L resize-pane -R

bind C-l clear-history

# Alt-<n> to switch to window <n>
run "for idx in $(seq 1 9); do tmux bind -n M-\$idx select-window -t \$idx; done"

bind e run "cut -c3- ~/.config/tmux/tmux.conf | sh -s edit_tmux_output"

# Clipboard
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

bind b last-window
bind R source ~/.config/tmux/tmux.conf
bind ! confirm-before -p "kill-server? (y/n)" kill-server

bind -T root F12 {
  set prefix None
  set key-table off
  set -g status off
  if -F '#{pane_in_mode}' 'send-keys -X cancel'
  refresh-client -S
}

bind -T off F12 {
  set -u prefix
  set -u key-table
  set -g status on
  refresh-client -S
}

set -g @continuum-restore 'on'
run ~/.config/tmux/plugins/tmux-resurrect/resurrect.tmux
run ~/.config/tmux/plugins/tmux-continuum/continuum.tmux
run ~/.config/tmux/plugins/tmux-navigator/vim-tmux-navigator.tmux

# EOF
#
# set -e
#
# set_theme() {
#   theme=$1
# 
#   tmux source-file ~/.config/tmux/theme-${theme}.conf
# 
#   if [[ -z "$SSH_CLIENT" ]] && [[ -f ~/.config/tmux/theme.remote.conf ]]; then
#     tmux source-file ~/.config/tmux/theme.remote.conf
#   fi
# }
# 
# monitor_theme() {
#   theme=$1
#
#   if [[ -n $theme ]]; then
#     set_theme $theme
#   elif ! command -v dark-notify >/dev/null 2>&1; then
#     theme=$(tmux show -v @theme 2>/dev/null || echo ${THEME:-light})
#     set_theme $theme
#   elif ! pgrep -f "dark-notify.*set_theme" >/dev/null; then
#     dark-notify -c "cut -c3- ~/.config/tmux/tmux.conf | sh -s -- set_theme"
#   else
#     dark-notify -e -c "cut -c3- ~/.config/tmux/tmux.conf | sh -s -- set_theme"
#   fi
# }
#
# edit_tmux_output() {
#   file=$(mktemp).sh
#   tmux capture-pane -p -S - > $file
#   tmux new-window -n:tmux-output "$EDITOR '+ normal G $' $file"
# }
#
# "$@"
